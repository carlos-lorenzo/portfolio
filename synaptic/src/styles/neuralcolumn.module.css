/* src/components/NeuralColumn.module.css */
.neuralColumnContainer {
	display: flex;
	flex-direction: column;
	align-items: center; /* Centers the column horizontally */
	justify-content: center; /* Centers the column vertically */
	padding: 20px;
	position: relative; /* For absolute positioning of background effects if needed */
	z-index: 10; /* Ensure it's above background particles */
	place-self: center;
}

.neuralNode {
	position: relative;
	width: 25dvh; /* Adjust size as needed */
	height: 25dvh;
	border-radius: 40%; /* Makes it a circle */
	border-color: rgba(241, 250, 140, 0.5);
	background-color: var(--background);
	opacity: 1;
	border-style: solid;
	display: flex;
	flex-direction: column;
	align-items: center;
	justify-content: center;
	text-align: center;
	cursor: pointer;
	z-index: 99; /* Ensures nodes are above lines */

}

.nodeWrapper {
  position: relative; /* This is crucial: establishes positioning context for children */
  display: flex; /* To align the node and potentially the children container */
  justify-content: center; /* Center the neuralNode within its wrapper */
  align-items: center;
  width: 100%; /* Or a specific width */
}


.connectorLine {
	width: 4px; /* Thickness of the line */
	height: 25dvh; /* Length of the line between nodes */
	background-color: var(--yellow);
	position: relative;
	z-index: 1; /* Ensures lines are below nodes */
	transform-origin: top; /* For vertical scaling animation */
	box-shadow: "0 0 10px rgba(241, 250, 140, 1)";
}

.neuralSubNode {
	width: 15dvh;
	height: 15dvh;
	border-radius: 50%; /* Makes it a circle */
	background-color: var(--background);
	border-color: rgba(241, 250, 140, 0.5);
	
	border-style: solid;
	z-index: 3; /* Ensures nodes are above lines */
	display: flex;
	flex-direction: column;
	justify-content: center;
	align-items: center;
	text-align: center;
	cursor: pointer;
}

.neuralChildrenContainer {
	position: absolute; /* Take children out of normal flow */
	/* Adjust to align vertically and add some spacing */
	display: flex;
	flex-direction: column; /* Arrange children vertically */
	justify-content: center;
	align-items: center;
	
	z-index: 3; /* Ensure children are on top of the line but below the parent node */
}

.neuralSubNodeContent{
	z-index: 99; /* Ensure the content is above the parent node */
}


.hexagon {
  width: 100px;
  height: 55px;
  position: relative;
}

.hexagon, 
.hexagon:before, 
.hexagon:after {
  background: red;
  box-shadow: 0 0 10px rgba(0,0,0,0.8);   
}

.hexagon:before,
.hexagon:after {
  content: "";
  position: absolute;
  left: 22px;
  width: 57px;
  height: 57px;
  transform: rotate(145deg) skew(22.5deg);
}

.hexagon:before {
  top: -29px;
}

.hexagon:after {
  top: 27px;
}

.hexagon span {
  position: absolute;
  top: 0;
  left: 0;
  width: 100px;
  height: 55px;
  background: red;
  z-index: 1;
}